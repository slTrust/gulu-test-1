### 发布npm包

> #### 1.确保 npm run test 全是绿色(原谅色)才行

> #### 2.上传代码到 npmjs.org

- 更新 package.json

```
在 package.json 里将版本号改为 0.0.1，等我们做完了再改成 1.0.0
创建 index.js，在 index.js 里将你想要导出的内容全部导出


index.js里 

import Button from './src/button'
import ButtonGroup from './src/button-group'
import Icon from './src/icon'

export {Button,ButtonGroup,Icon}


然后去package.json里 添加入口文件
"main": "index.js",
```

> #### 3. 去 https://www.npmjs.com/ 注册一个账户

> #### 4. 在你的项目根目录运行 npm adduser

```
huangjiaxideMacBook-Pro:gulu-demo huangjiaxi$ npm adduser
Username: almost_00
Password: 
Email: (this IS public) trustfor@sina.cn

npm ERR! code E409
npm ERR! Registry returned 409 for PUT on https://registry.npm.taobao.org/-/user/org.couchdb.user:almost_00: conflict

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/huangjiaxi/.npm/_logs/2018-12-22T07_54_52_544Z-debug.log

```

- 为什么报错呢？

因为为了下载的快捷 下载源是 淘宝

如果错误提示里面含有 https://registry.npm.taobao.org 则说明你的 npm 源目前为淘宝源，需要更换为 npm 官方源

> 修改配置

```
查看配置
npm config list 

打印如下
; cli configs
metrics-registry = "https://registry.npm.taobao.org/"
scope = ""
user-agent = "npm/6.4.1 node/v10.14.2 darwin x64"

; userconfig /Users/huangjiaxi/.npmrc
registry = "https://registry.npm.taobao.org/"

; node bin location = /usr/local/bin/node
; cwd = /Users/huangjiaxi/Desktop/gulu-demo
; HOME = /Users/huangjiaxi
; "npm config ls -l" to show all defaults.

------------------------------------
进入这个目录
userconfig /Users/huangjiaxi/.npmrc
注释掉这句话
registry = "https://registry.npm.taobao.org/"

我的路径是
vi /Users/huangjiaxi/.npmrc
vi /Users/huangjiaxi/.npmrc
vi /Users/huangjiaxi/.npmrc

```

> 再次进行 npm adduser

```
输入你的账号 密码 邮箱
出现 下面代表你成功了
Logged in as 用户名 on https://registry.npmjs.org/.
```

> 此时建议修改 package.json里的 name 

- 你还不是完整的项目
- 而且你不想让别人觉得你low
- 起名起个不重要的 如 gulu-test-0-1
- 不要忘了提交代码然后push 最后在发布 npm publish

> 发布 npm publish

- 如果还失败会反馈一些信息可能是你起的名字像个垃圾，重新改个稍微正常的名字就可以

```
npm notice 
npm notice 📦  gulu-test-0-1@0.0.1
npm notice === Tarball Contents === 
npm notice 1.2kB  package.json                        
npm notice 219B   .travis.yml                         
npm notice 1.4kB  index.html                          
npm notice 142B   index.js                            
npm notice 1.9kB  karma.conf.js                       
npm notice 1.1kB  LICENSE                             
npm notice 149B   README.md                           
npm notice 1.2kB  documents/000测试初步.md            
npm notice 11.2kB documents/001持续集成.md            
npm notice 9.4kB  documents/002测试用例剖析.md        
npm notice 2.2kB  documents/003持续集成之自动化测试.md
npm notice 2.4kB  documents/004发布npm包              
npm notice 4.6kB  src/app.js                          
npm notice 1.6kB  src/button-group.vue                
npm notice 1.8kB  src/button.vue                      
npm notice 249B   src/icon.vue                        
npm notice 2.5kB  test/button.test.js                 
npm notice === Tarball Details === 
npm notice name:          gulu-test-0-1                           
npm notice version:       0.0.1                                   
npm notice package size:  12.7 kB                                 
npm notice unpacked size: 43.2 kB                                 
npm notice shasum:        51b1f601c27fb721286d2d050eaf6ffe1c769f42
npm notice integrity:     sha512-LYslf1Ks1XGw3[...]YlFEyDNX6iIaA==
npm notice total files:   17                                      
npm notice 
+ gulu-test-0-1@0.0.1
```


#### 使用自己的包

> 预测其他使用你的包的人会怎么使用

- 使用 vue-cli
- 使用 webpack
- 使用 parcel

> 分别使用这些方式来使用自己的包（我们只以 vue-cli 为例）我用的是vue-cli3

```
// 注意此时要切换命令行的目录 我用的桌面
cd ~/Desktop 
vue create hello-world
直接一路回车
按照提示运行
cd hello-world
yarn serve

如果顺利 你就可以去浏览器看到一个空架子的 vue项目

安装我们的 npm包
注意目录 防止你手贱
注意目录 防止你手贱
注意目录 防止你手贱
cd ~/Desktop/hello-world
npm i gulu-test-0-1
下载的很慢 
    1因为淘宝源没换回来

细节注意 如果一路回车开启的 vue-cli项目用的是yarn
你这里用的是 npm 千万千万不要 npm和 yarn 混着用

yarn add  gulu-test-0-1

```

> 在 hello-world 项目里引入我们的 轮子

```
// main.js
import {Button,ButtonGroup,Icon} from 'gulu-test-0-1'

console.log(Button);


-------------------------------
重新运行 yarn serve

结果报错了
Failed to compile with 3 errors                                                                   16:28:10

Failed to resolve loader: sass-loader
You may need to install it. 
```

> 失败的原因

node目前不支持 import 

```
import Button from './src/button'
import ButtonGroup from './src/button-group'
import Icon from './src/icon'

export {Button,ButtonGroup,Icon}
```


> #### 使用过程中我们发现报错说 import 语法有问题，那时因为 node 目前确实不支持 import，我们需要用 babel 转译 import

- 你可以要求使用者自己用 babel 来转译(写轮子的大忌)
- 你也可以转义好了再给他用

回到 gulu-demo 里

```
npx parcel build index.js --no-minify --no-cache

# 得到三个文件
dist/index.js     8.42 KB    1.92s
dist/index.css    2.09 KB    1.73s
dist/index.map        0 B      2ms

修改 package.json里 的 main路径
dist/index.js
```

> ##### 但是此时有个问题 那就是.gitignore 文件里你忽略里dist目录

```
我们先不处理 先提交代码 然后发布 npm试一下
此时发布会报错  意思就是不允许发同一个版本的文件
修改 package.json里的
"version": "0.0.2",
然后发布
```

小白选手更新了我们的包 回到 hello-world 程序

```
yarn add gulu-test-0-1

yarn serve

http://localhost:8080/ 里面 确实打印了这个 Button对象
把它添加到app.vue里


<template>
  <div id="app">
    <img alt="Vue logo" src="./assets/logo.png">
    <HelloWorld msg="Welcome to Your Vue.js App"/>
    <g-button>欢迎使用轱辘</g-button>
  </div>
</template>

<script>
import HelloWorld from './components/HelloWorld.vue'
import {Button,ButtonGroup,Icon} from 'gulu-test-0-1'

console.log(Button);
export default {
  name: 'app',
  components: {
    HelloWorld,
    'g-button':Button
  }
}
</script>

<style>
...
</style>

然后再去浏览器看  发现没有样式 所以要手动引入 css

import 'gulu-test-0-1/dist/index.css'

然后再去浏览器看  就剩文字了 颜色边框都没了

那是因为 最开始的时候 我们要引入一段样式
在 hello-world 的app.vue里 的style里加入如下
:root{
    --button-height:32px;
    --font-size:14px;
    --button-bg:white;
    --button-active-bg:#eee;
    --border-radius:4px;
    --color:#333;
    --border-color:#999;
    --border-color-hover:#666;
}

最后
最后
最后

终于磕磕绊绊的完成了。
```

- npm publish 是从本地发布 所以不用提交代码到仓库
- npm publish 是从本地发布 所以不用提交代码到仓库
- npm publish 是从本地发布 所以不用提交代码到仓库


```
npx parcel build index.js --no-minify --no-cache（本来不应该加 --no-minify 的，奈何不加会有 bug，HTML 压缩把 slot 标签全删了）
将 package.json 的 main 改为 dist/index.js
```

> 使用 npm link 或者 yarn link 来加速调试

你每次修改源码之后，有两条路让别人得到最新效果

- 更新 package.json 里的 version，然后 npm publish。别人通过 npm update xxx 来更新。
- 如果你只是为了本地调试，可以在项目目录使用 npm link，然后在使用之处运行 npm link xxx，就是最新了


### 此时还有一个小bug需要优化

- 就是每次改动 你的 gulu-demo里的代码
- 修改package.json里的版本号 
- 重新发布

